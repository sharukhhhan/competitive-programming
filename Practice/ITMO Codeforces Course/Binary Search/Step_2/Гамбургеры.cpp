// H. Гамбургеры
// ограничение по времени на тест1 секунда
// ограничение по памяти на тест256 мегабайт
// вводстандартный ввод
// выводстандартный вывод
// Поликарп очень любит гамбургеры, особенно приготовленные собственноручно. Поликарп считает, что существует только три достойных ингредиента для приготовления гамбургера: хлеб, колбаса и сыр. Рецепт своего знаменитого «гамбургера от Поликарпа» он записывает в виде строки из букв 'B' (хлеб), 'S' (колбаса) и 'C' (сыр). В рецепте ингредиенты перечисляются снизу вверх, например, рецепт «ВSCBS» обозначает гамбургер в котором снизу вверх идут: хлеб, колбаса, сыр, хлеб и снова колбаса.

// На кухне у Поликарпа в наличии nb
//  кусочков хлеба, ns
//  кусочков колбасы и nc
//  кусочков сыра. Кроме того, в магазине неподалеку есть в продаже все три ингредиента по цене: pb
//  рублей за кусок хлеба, ps
//  — за кусок колбасы и pc
//  — за кусочек сыра.

// У Поликарпа есть r
//  рублей, которые он готов потратить в магазине. Какое наибольшее количество гамбургеров он сможет приготовить? Считается, что ломать или резать любой из кусочков (хлеба, колбасы, сыра) нельзя, а также что в магазине есть бесконечно много кусочков каждого из ингредиентов.

// Входные данные
// В первой строке входных данных содержится непустая строка, описывающая рецепт «гамбургера от Поликарпа». Длина строки не превосходит 100, строка содержит только буквы 'B' (прописная латинская B), 'S' (прописная латинская S) и 'C' (прописная латинская C).

// Вторая строка содержит три целых числа nb
// , ns
// , nc
//  (1≤nb,ns,nc≤100
// ) — количество кусочков хлеба, колбасы и сыра на кухне Поликарпа. Третья строка содержит три целых числа pb
// , ps
// , pc
//  (1≤pb,ps,pc≤100
// ) — цена одного кусочка хлеба, колбасы и сыра в магазине. Наконец, четвертая строка содержит целое число r
//  (1≤r≤1012
// ) — количество рублей у Поликарпа.

// Пожалуйста, не используйте спецификатор %lld для чтения или записи 64-битных чисел на С++. Рекомендуется использовать потоки cin, cout или спецификатор %I64d.

// Выходные данные
// Выведите наибольшее количество гамбургеров, которое Поликарп может приготовить. Если он не может приготовить ни одного гамбургера, выведите 0.

// Примеры
// входные данныеСкопировать
// BBBSSC
// 6 4 1
// 1 2 3
// 4
// выходные данныеСкопировать
// 2
// входные данныеСкопировать
// BBC
// 1 10 1
// 1 10 1
// 21
// выходные данныеСкопировать
// 7
// входные данныеСкопировать
// BSC
// 1 1 1
// 1 1 3
// 1000000000000
// выходные данныеСкопировать
// 200000000001

#include <bits/stdc++.h>
using namespace std;
string rec;
int b = 0, s = 0, c = 0;
int nb, ns, nc, pb, ps, pc;
long long money;

bool okay(long long mid) {
    long long lb = (nb - mid*b) < 0 ? (nb - mid*b) : 0; 
    long long ls = (ns - mid*s) < 0 ? (ns - mid*s) : 0; 
    long long lc = (nc - mid*c) < 0 ? (nc - mid*c) : 0;
    return ((lb * pb  + ls * ps + lc * pc) + money >= 0) ? true : false;
}

int main() {
    cin >> rec;
    for (int i = 0; i < rec.size(); i++) {
        if (rec[i] == 'B') {
            b++;
        } else if (rec[i] == 'S') {
            s++;
        } else {
            c++;
        }
    }
    cin >> nb >> ns >> nc >> pb >> ps >> pc;
    cin >> money;

    long long l = 0, r = 2*1e12;

    while (r - l > 1) {
        long long mid = (r + l) / 2;

        if (okay(mid)) {
            l = mid;
        } else {
            r = mid;
        }
    }

    cout << l << "\n";
    
}